package game;
import main.Tetris;
import menu.Highscores;

import org.newdawn.slick.GameContainer;
import org.newdawn.slick.Graphics;
import org.newdawn.slick.Music;
import org.newdawn.slick.SlickException;
import org.newdawn.slick.state.BasicGameState;
import org.newdawn.slick.state.StateBasedGame;

import entity.Entity;
 
public class GameplayState extends BasicGameState {
 
	private int stateID;
	
	private Entity background;
	private Music musique;
	
	private enum States {
		START, PAUSE, HIGHSCORE, GAME_OVER
	}
	private States currentState;
	
    public GameplayState(int stateID) {
    	this.stateID = stateID;
    }

	@Override
	public void init(GameContainer gc, StateBasedGame sbg)
			throws SlickException {
		
		background = new Entity("img/background.jpg");
		
	}

	@Override
	public void render(GameContainer gc, StateBasedGame sbg, Graphics gfx)
			throws SlickException {
		
		background.draw();
		
	}

	@Override
	public void update(GameContainer gc, StateBasedGame sbg, int delta)
			throws SlickException {
		
		switch (currentState) {
		case START:
			currentState = States.NEW_PIECE;
			deltaCounter = 500;
			break;
		case NEW_PIECE:
			generateNewPiece();
			break;
		case MOVING_PIECE:
			updatePiece(gc, sbg, delta);
			break;
		case LINE_DESTRUCTION:
			checkForFullLines(gc, sbg, delta);
			currentState = States.NEW_PIECE;
			break;
		case HIGHSCORE:
			break;
		case PAUSE:
			break;
		case GAME_OVER:

			Highscores.getInstance().addScore(score);

			sbg.enterState(Tetris.MAINMENUSTATE);
			break;
		}
		
	}

	@Override
	public int getID() {
		return this.stateID;
	}
	
	@Override
	public void enter(GameContainer gc, StateBasedGame sb)
			throws SlickException {
		super.enter(gc, sb);

		musique = new Music("snd/piano.wav");
		musique.loop();
	}

}